//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Benchmark_Instant_Reports_2 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetBenchmarkStats")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetBenchmarkStats : global::System.Data.DataSet {
        
        private TEMP_RESULTS_BENCHMARKSTATSDataTable tableTEMP_RESULTS_BENCHMARKSTATS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetBenchmarkStats() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSetBenchmarkStats(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TEMP_RESULTS_BENCHMARKSTATS"] != null)) {
                    base.Tables.Add(new TEMP_RESULTS_BENCHMARKSTATSDataTable(ds.Tables["TEMP_RESULTS_BENCHMARKSTATS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TEMP_RESULTS_BENCHMARKSTATSDataTable TEMP_RESULTS_BENCHMARKSTATS {
            get {
                return this.tableTEMP_RESULTS_BENCHMARKSTATS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetBenchmarkStats cln = ((DataSetBenchmarkStats)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TEMP_RESULTS_BENCHMARKSTATS"] != null)) {
                    base.Tables.Add(new TEMP_RESULTS_BENCHMARKSTATSDataTable(ds.Tables["TEMP_RESULTS_BENCHMARKSTATS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTEMP_RESULTS_BENCHMARKSTATS = ((TEMP_RESULTS_BENCHMARKSTATSDataTable)(base.Tables["TEMP_RESULTS_BENCHMARKSTATS"]));
            if ((initTable == true)) {
                if ((this.tableTEMP_RESULTS_BENCHMARKSTATS != null)) {
                    this.tableTEMP_RESULTS_BENCHMARKSTATS.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetBenchmarkStats";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTEMP_RESULTS_BENCHMARKSTATS = new TEMP_RESULTS_BENCHMARKSTATSDataTable();
            base.Tables.Add(this.tableTEMP_RESULTS_BENCHMARKSTATS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTEMP_RESULTS_BENCHMARKSTATS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetBenchmarkStats ds = new DataSetBenchmarkStats();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TEMP_RESULTS_BENCHMARKSTATSRowChangeEventHandler(object sender, TEMP_RESULTS_BENCHMARKSTATSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TEMP_RESULTS_BENCHMARKSTATSDataTable : global::System.Data.TypedTableBase<TEMP_RESULTS_BENCHMARKSTATSRow> {
            
            private global::System.Data.DataColumn columnCAMPUS;
            
            private global::System.Data.DataColumn columnTEST_ID;
            
            private global::System.Data.DataColumn columnTEACHER;
            
            private global::System.Data.DataColumn columnPERIOD;
            
            private global::System.Data.DataColumn columnITEM_NUM;
            
            private global::System.Data.DataColumn columnPCT_CORRECT;
            
            private global::System.Data.DataColumn columnNUM_CORRECT;
            
            private global::System.Data.DataColumn columnNUM_TOTAL;
            
            private global::System.Data.DataColumn columnNUM_A;
            
            private global::System.Data.DataColumn columnNUM_B;
            
            private global::System.Data.DataColumn columnNUM_C;
            
            private global::System.Data.DataColumn columnNUM_D;
            
            private global::System.Data.DataColumn columnNUM_E;
            
            private global::System.Data.DataColumn columnNUM_F;
            
            private global::System.Data.DataColumn columnNUM_G;
            
            private global::System.Data.DataColumn columnNUM_H;
            
            private global::System.Data.DataColumn columnNUM_J;
            
            private global::System.Data.DataColumn columnNUM_K;
            
            private global::System.Data.DataColumn columnANSWER;
            
            private global::System.Data.DataColumn columnOBJECTIVE;
            
            private global::System.Data.DataColumn columnTEKS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEMP_RESULTS_BENCHMARKSTATSDataTable() {
                this.TableName = "TEMP_RESULTS_BENCHMARKSTATS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TEMP_RESULTS_BENCHMARKSTATSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TEMP_RESULTS_BENCHMARKSTATSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAMPUSColumn {
                get {
                    return this.columnCAMPUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TEST_IDColumn {
                get {
                    return this.columnTEST_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TEACHERColumn {
                get {
                    return this.columnTEACHER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PERIODColumn {
                get {
                    return this.columnPERIOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ITEM_NUMColumn {
                get {
                    return this.columnITEM_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCT_CORRECTColumn {
                get {
                    return this.columnPCT_CORRECT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_CORRECTColumn {
                get {
                    return this.columnNUM_CORRECT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_TOTALColumn {
                get {
                    return this.columnNUM_TOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_AColumn {
                get {
                    return this.columnNUM_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_BColumn {
                get {
                    return this.columnNUM_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_CColumn {
                get {
                    return this.columnNUM_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_DColumn {
                get {
                    return this.columnNUM_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_EColumn {
                get {
                    return this.columnNUM_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_FColumn {
                get {
                    return this.columnNUM_F;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_GColumn {
                get {
                    return this.columnNUM_G;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_HColumn {
                get {
                    return this.columnNUM_H;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_JColumn {
                get {
                    return this.columnNUM_J;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NUM_KColumn {
                get {
                    return this.columnNUM_K;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ANSWERColumn {
                get {
                    return this.columnANSWER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OBJECTIVEColumn {
                get {
                    return this.columnOBJECTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TEKSColumn {
                get {
                    return this.columnTEKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEMP_RESULTS_BENCHMARKSTATSRow this[int index] {
                get {
                    return ((TEMP_RESULTS_BENCHMARKSTATSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TEMP_RESULTS_BENCHMARKSTATSRowChangeEventHandler TEMP_RESULTS_BENCHMARKSTATSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TEMP_RESULTS_BENCHMARKSTATSRowChangeEventHandler TEMP_RESULTS_BENCHMARKSTATSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TEMP_RESULTS_BENCHMARKSTATSRowChangeEventHandler TEMP_RESULTS_BENCHMARKSTATSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TEMP_RESULTS_BENCHMARKSTATSRowChangeEventHandler TEMP_RESULTS_BENCHMARKSTATSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTEMP_RESULTS_BENCHMARKSTATSRow(TEMP_RESULTS_BENCHMARKSTATSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEMP_RESULTS_BENCHMARKSTATSRow AddTEMP_RESULTS_BENCHMARKSTATSRow(
                        string CAMPUS, 
                        string TEST_ID, 
                        string TEACHER, 
                        string PERIOD, 
                        decimal ITEM_NUM, 
                        decimal PCT_CORRECT, 
                        decimal NUM_CORRECT, 
                        decimal NUM_TOTAL, 
                        decimal NUM_A, 
                        decimal NUM_B, 
                        decimal NUM_C, 
                        decimal NUM_D, 
                        decimal NUM_E, 
                        decimal NUM_F, 
                        decimal NUM_G, 
                        decimal NUM_H, 
                        decimal NUM_J, 
                        decimal NUM_K, 
                        string ANSWER, 
                        decimal OBJECTIVE, 
                        string TEKS) {
                TEMP_RESULTS_BENCHMARKSTATSRow rowTEMP_RESULTS_BENCHMARKSTATSRow = ((TEMP_RESULTS_BENCHMARKSTATSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CAMPUS,
                        TEST_ID,
                        TEACHER,
                        PERIOD,
                        ITEM_NUM,
                        PCT_CORRECT,
                        NUM_CORRECT,
                        NUM_TOTAL,
                        NUM_A,
                        NUM_B,
                        NUM_C,
                        NUM_D,
                        NUM_E,
                        NUM_F,
                        NUM_G,
                        NUM_H,
                        NUM_J,
                        NUM_K,
                        ANSWER,
                        OBJECTIVE,
                        TEKS};
                rowTEMP_RESULTS_BENCHMARKSTATSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTEMP_RESULTS_BENCHMARKSTATSRow);
                return rowTEMP_RESULTS_BENCHMARKSTATSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEMP_RESULTS_BENCHMARKSTATSRow FindByCAMPUSTEST_IDTEACHERPERIODITEM_NUM(string CAMPUS, string TEST_ID, string TEACHER, string PERIOD, decimal ITEM_NUM) {
                return ((TEMP_RESULTS_BENCHMARKSTATSRow)(this.Rows.Find(new object[] {
                            CAMPUS,
                            TEST_ID,
                            TEACHER,
                            PERIOD,
                            ITEM_NUM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TEMP_RESULTS_BENCHMARKSTATSDataTable cln = ((TEMP_RESULTS_BENCHMARKSTATSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TEMP_RESULTS_BENCHMARKSTATSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCAMPUS = base.Columns["CAMPUS"];
                this.columnTEST_ID = base.Columns["TEST_ID"];
                this.columnTEACHER = base.Columns["TEACHER"];
                this.columnPERIOD = base.Columns["PERIOD"];
                this.columnITEM_NUM = base.Columns["ITEM_NUM"];
                this.columnPCT_CORRECT = base.Columns["PCT_CORRECT"];
                this.columnNUM_CORRECT = base.Columns["NUM_CORRECT"];
                this.columnNUM_TOTAL = base.Columns["NUM_TOTAL"];
                this.columnNUM_A = base.Columns["NUM_A"];
                this.columnNUM_B = base.Columns["NUM_B"];
                this.columnNUM_C = base.Columns["NUM_C"];
                this.columnNUM_D = base.Columns["NUM_D"];
                this.columnNUM_E = base.Columns["NUM_E"];
                this.columnNUM_F = base.Columns["NUM_F"];
                this.columnNUM_G = base.Columns["NUM_G"];
                this.columnNUM_H = base.Columns["NUM_H"];
                this.columnNUM_J = base.Columns["NUM_J"];
                this.columnNUM_K = base.Columns["NUM_K"];
                this.columnANSWER = base.Columns["ANSWER"];
                this.columnOBJECTIVE = base.Columns["OBJECTIVE"];
                this.columnTEKS = base.Columns["TEKS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCAMPUS = new global::System.Data.DataColumn("CAMPUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAMPUS);
                this.columnTEST_ID = new global::System.Data.DataColumn("TEST_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEST_ID);
                this.columnTEACHER = new global::System.Data.DataColumn("TEACHER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEACHER);
                this.columnPERIOD = new global::System.Data.DataColumn("PERIOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPERIOD);
                this.columnITEM_NUM = new global::System.Data.DataColumn("ITEM_NUM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_NUM);
                this.columnPCT_CORRECT = new global::System.Data.DataColumn("PCT_CORRECT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCT_CORRECT);
                this.columnNUM_CORRECT = new global::System.Data.DataColumn("NUM_CORRECT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_CORRECT);
                this.columnNUM_TOTAL = new global::System.Data.DataColumn("NUM_TOTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_TOTAL);
                this.columnNUM_A = new global::System.Data.DataColumn("NUM_A", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_A);
                this.columnNUM_B = new global::System.Data.DataColumn("NUM_B", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_B);
                this.columnNUM_C = new global::System.Data.DataColumn("NUM_C", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_C);
                this.columnNUM_D = new global::System.Data.DataColumn("NUM_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_D);
                this.columnNUM_E = new global::System.Data.DataColumn("NUM_E", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_E);
                this.columnNUM_F = new global::System.Data.DataColumn("NUM_F", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_F);
                this.columnNUM_G = new global::System.Data.DataColumn("NUM_G", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_G);
                this.columnNUM_H = new global::System.Data.DataColumn("NUM_H", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_H);
                this.columnNUM_J = new global::System.Data.DataColumn("NUM_J", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_J);
                this.columnNUM_K = new global::System.Data.DataColumn("NUM_K", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM_K);
                this.columnANSWER = new global::System.Data.DataColumn("ANSWER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnANSWER);
                this.columnOBJECTIVE = new global::System.Data.DataColumn("OBJECTIVE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOBJECTIVE);
                this.columnTEKS = new global::System.Data.DataColumn("TEKS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEKS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCAMPUS,
                                this.columnTEST_ID,
                                this.columnTEACHER,
                                this.columnPERIOD,
                                this.columnITEM_NUM}, true));
                this.columnCAMPUS.AllowDBNull = false;
                this.columnCAMPUS.MaxLength = 4;
                this.columnTEST_ID.AllowDBNull = false;
                this.columnTEST_ID.MaxLength = 200;
                this.columnTEACHER.AllowDBNull = false;
                this.columnTEACHER.MaxLength = 60;
                this.columnPERIOD.AllowDBNull = false;
                this.columnPERIOD.MaxLength = 3;
                this.columnITEM_NUM.AllowDBNull = false;
                this.columnANSWER.MaxLength = 10;
                this.columnTEKS.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEMP_RESULTS_BENCHMARKSTATSRow NewTEMP_RESULTS_BENCHMARKSTATSRow() {
                return ((TEMP_RESULTS_BENCHMARKSTATSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TEMP_RESULTS_BENCHMARKSTATSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TEMP_RESULTS_BENCHMARKSTATSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TEMP_RESULTS_BENCHMARKSTATSRowChanged != null)) {
                    this.TEMP_RESULTS_BENCHMARKSTATSRowChanged(this, new TEMP_RESULTS_BENCHMARKSTATSRowChangeEvent(((TEMP_RESULTS_BENCHMARKSTATSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TEMP_RESULTS_BENCHMARKSTATSRowChanging != null)) {
                    this.TEMP_RESULTS_BENCHMARKSTATSRowChanging(this, new TEMP_RESULTS_BENCHMARKSTATSRowChangeEvent(((TEMP_RESULTS_BENCHMARKSTATSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TEMP_RESULTS_BENCHMARKSTATSRowDeleted != null)) {
                    this.TEMP_RESULTS_BENCHMARKSTATSRowDeleted(this, new TEMP_RESULTS_BENCHMARKSTATSRowChangeEvent(((TEMP_RESULTS_BENCHMARKSTATSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TEMP_RESULTS_BENCHMARKSTATSRowDeleting != null)) {
                    this.TEMP_RESULTS_BENCHMARKSTATSRowDeleting(this, new TEMP_RESULTS_BENCHMARKSTATSRowChangeEvent(((TEMP_RESULTS_BENCHMARKSTATSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTEMP_RESULTS_BENCHMARKSTATSRow(TEMP_RESULTS_BENCHMARKSTATSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetBenchmarkStats ds = new DataSetBenchmarkStats();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TEMP_RESULTS_BENCHMARKSTATSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TEMP_RESULTS_BENCHMARKSTATSRow : global::System.Data.DataRow {
            
            private TEMP_RESULTS_BENCHMARKSTATSDataTable tableTEMP_RESULTS_BENCHMARKSTATS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TEMP_RESULTS_BENCHMARKSTATSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTEMP_RESULTS_BENCHMARKSTATS = ((TEMP_RESULTS_BENCHMARKSTATSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CAMPUS {
                get {
                    return ((string)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.CAMPUSColumn]));
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.CAMPUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEST_ID {
                get {
                    return ((string)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.TEST_IDColumn]));
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.TEST_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEACHER {
                get {
                    return ((string)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.TEACHERColumn]));
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.TEACHERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PERIOD {
                get {
                    return ((string)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.PERIODColumn]));
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.PERIODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ITEM_NUM {
                get {
                    return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.ITEM_NUMColumn]));
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.ITEM_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PCT_CORRECT {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.PCT_CORRECTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCT_CORRECT\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.PCT_CORRECTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_CORRECT {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_CORRECTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_CORRECT\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_CORRECTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_TOTAL {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_TOTALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_TOTAL\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_A {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_AColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_A\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_B {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_B\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_C {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_C\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_D {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_D\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_E {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_EColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_E\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_F {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_FColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_F\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_FColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_G {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_GColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_G\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_GColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_H {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_HColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_H\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_HColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_J {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_JColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_J\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_JColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NUM_K {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_KColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NUM_K\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_KColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ANSWER {
                get {
                    try {
                        return ((string)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.ANSWERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ANSWER\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.ANSWERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OBJECTIVE {
                get {
                    try {
                        return ((decimal)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.OBJECTIVEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OBJECTIVE\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.OBJECTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEKS {
                get {
                    try {
                        return ((string)(this[this.tableTEMP_RESULTS_BENCHMARKSTATS.TEKSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEKS\' in table \'TEMP_RESULTS_BENCHMARKSTATS\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTEMP_RESULTS_BENCHMARKSTATS.TEKSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCT_CORRECTNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.PCT_CORRECTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCT_CORRECTNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.PCT_CORRECTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_CORRECTNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_CORRECTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_CORRECTNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_CORRECTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_TOTALNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_TOTALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_TOTALNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_TOTALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_ANull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_AColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_ANull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_AColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_BNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_BNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_CNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_CNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_DNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_DNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_ENull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_EColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_ENull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_EColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_FNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_FColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_FNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_FColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_GNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_GColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_GNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_GColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_HNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_HColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_HNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_HColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_JNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_JColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_JNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_JColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNUM_KNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_KColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNUM_KNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.NUM_KColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsANSWERNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.ANSWERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetANSWERNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.ANSWERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOBJECTIVENull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.OBJECTIVEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOBJECTIVENull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.OBJECTIVEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTEKSNull() {
                return this.IsNull(this.tableTEMP_RESULTS_BENCHMARKSTATS.TEKSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTEKSNull() {
                this[this.tableTEMP_RESULTS_BENCHMARKSTATS.TEKSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TEMP_RESULTS_BENCHMARKSTATSRowChangeEvent : global::System.EventArgs {
            
            private TEMP_RESULTS_BENCHMARKSTATSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEMP_RESULTS_BENCHMARKSTATSRowChangeEvent(TEMP_RESULTS_BENCHMARKSTATSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TEMP_RESULTS_BENCHMARKSTATSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Benchmark_Instant_Reports_2.DataSetBenchmarkStatsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TEMP_RESULTS_BENCHMARKSTATSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TEMP_RESULTS_BENCHMARKSTATSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TEMP_RESULTS_BENCHMARKSTATS";
            tableMapping.ColumnMappings.Add("CAMPUS", "CAMPUS");
            tableMapping.ColumnMappings.Add("TEST_ID", "TEST_ID");
            tableMapping.ColumnMappings.Add("TEACHER", "TEACHER");
            tableMapping.ColumnMappings.Add("PERIOD", "PERIOD");
            tableMapping.ColumnMappings.Add("ITEM_NUM", "ITEM_NUM");
            tableMapping.ColumnMappings.Add("PCT_CORRECT", "PCT_CORRECT");
            tableMapping.ColumnMappings.Add("NUM_CORRECT", "NUM_CORRECT");
            tableMapping.ColumnMappings.Add("NUM_TOTAL", "NUM_TOTAL");
            tableMapping.ColumnMappings.Add("NUM_A", "NUM_A");
            tableMapping.ColumnMappings.Add("NUM_B", "NUM_B");
            tableMapping.ColumnMappings.Add("NUM_C", "NUM_C");
            tableMapping.ColumnMappings.Add("NUM_D", "NUM_D");
            tableMapping.ColumnMappings.Add("NUM_E", "NUM_E");
            tableMapping.ColumnMappings.Add("NUM_F", "NUM_F");
            tableMapping.ColumnMappings.Add("NUM_G", "NUM_G");
            tableMapping.ColumnMappings.Add("NUM_H", "NUM_H");
            tableMapping.ColumnMappings.Add("NUM_J", "NUM_J");
            tableMapping.ColumnMappings.Add("NUM_K", "NUM_K");
            tableMapping.ColumnMappings.Add("ANSWER", "ANSWER");
            tableMapping.ColumnMappings.Add("OBJECTIVE", "OBJECTIVE");
            tableMapping.ColumnMappings.Add("TEKS", "TEKS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"ACI\".\"TEMP_RESULTS_BENCHMARKSTATS\" WHERE ((\"CAMPUS\" = :Original_CAMP" +
                "US) AND (\"TEST_ID\" = :Original_TEST_ID) AND (\"TEACHER\" = :Original_TEACHER) AND " +
                "(\"PERIOD\" = :Original_PERIOD) AND (\"ITEM_NUM\" = :Original_ITEM_NUM))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CAMPUS", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "CAMPUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEST_ID", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TEST_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEACHER", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TEACHER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PERIOD", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "PERIOD", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ITEM_NUM", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ITEM_NUM", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""ACI"".""TEMP_RESULTS_BENCHMARKSTATS"" (""CAMPUS"", ""TEST_ID"", ""TEACHER"", ""PERIOD"", ""ITEM_NUM"", ""PCT_CORRECT"", ""NUM_CORRECT"", ""NUM_TOTAL"", ""NUM_A"", ""NUM_B"", ""NUM_C"", ""NUM_D"", ""NUM_E"", ""NUM_F"", ""NUM_G"", ""NUM_H"", ""NUM_J"", ""NUM_K"", ""ANSWER"", ""OBJECTIVE"", ""TEKS"") VALUES (:CAMPUS, :TEST_ID, :TEACHER, :PERIOD, :ITEM_NUM, :PCT_CORRECT, :NUM_CORRECT, :NUM_TOTAL, :NUM_A, :NUM_B, :NUM_C, :NUM_D, :NUM_E, :NUM_F, :NUM_G, :NUM_H, :NUM_J, :NUM_K, :ANSWER, :OBJECTIVE, :TEKS)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CAMPUS", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "CAMPUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEST_ID", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TEST_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEACHER", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TEACHER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PERIOD", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "PERIOD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ITEM_NUM", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ITEM_NUM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PCT_CORRECT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PCT_CORRECT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_CORRECT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_CORRECT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_TOTAL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_TOTAL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_A", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_A", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_B", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_B", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_C", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_C", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_D", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_D", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_E", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_E", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_F", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_F", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_G", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_G", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_H", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_H", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_J", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_J", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_K", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_K", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ANSWER", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "ANSWER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OBJECTIVE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "OBJECTIVE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEKS", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TEKS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""ACI"".""TEMP_RESULTS_BENCHMARKSTATS"" SET ""CAMPUS"" = :CAMPUS, ""TEST_ID"" = :TEST_ID, ""TEACHER"" = :TEACHER, ""PERIOD"" = :PERIOD, ""ITEM_NUM"" = :ITEM_NUM, ""PCT_CORRECT"" = :PCT_CORRECT, ""NUM_CORRECT"" = :NUM_CORRECT, ""NUM_TOTAL"" = :NUM_TOTAL, ""NUM_A"" = :NUM_A, ""NUM_B"" = :NUM_B, ""NUM_C"" = :NUM_C, ""NUM_D"" = :NUM_D, ""NUM_E"" = :NUM_E, ""NUM_F"" = :NUM_F, ""NUM_G"" = :NUM_G, ""NUM_H"" = :NUM_H, ""NUM_J"" = :NUM_J, ""NUM_K"" = :NUM_K, ""ANSWER"" = :ANSWER, ""OBJECTIVE"" = :OBJECTIVE, ""TEKS"" = :TEKS WHERE ((""CAMPUS"" = :Original_CAMPUS) AND (""TEST_ID"" = :Original_TEST_ID) AND (""TEACHER"" = :Original_TEACHER) AND (""PERIOD"" = :Original_PERIOD) AND (""ITEM_NUM"" = :Original_ITEM_NUM))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CAMPUS", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "CAMPUS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEST_ID", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TEST_ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEACHER", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TEACHER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PERIOD", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "PERIOD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ITEM_NUM", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ITEM_NUM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PCT_CORRECT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PCT_CORRECT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_CORRECT", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_CORRECT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_TOTAL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_TOTAL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_A", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_A", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_B", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_B", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_C", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_C", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_D", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_D", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_E", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_E", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_F", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_F", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_G", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_G", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_H", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_H", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_J", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_J", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NUM_K", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NUM_K", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ANSWER", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "ANSWER", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("OBJECTIVE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "OBJECTIVE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEKS", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TEKS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CAMPUS", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "CAMPUS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEST_ID", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TEST_ID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TEACHER", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "TEACHER", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PERIOD", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "PERIOD", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ITEM_NUM", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ITEM_NUM", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["SisprodOracleDb"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[2];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CAMPUS, TEST_ID, TEACHER, PERIOD, ITEM_NUM, PCT_CORRECT, NUM_CORRECT, NUM_" +
                "TOTAL, NUM_A, NUM_B, NUM_C, NUM_D, NUM_E, NUM_F, NUM_G, NUM_H, NUM_J, NUM_K, ANS" +
                "WER, OBJECTIVE, TEKS FROM ACI.TEMP_RESULTS_BENCHMARKSTATS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ANSWER, CAMPUS, ITEM_NUM, NUM_A, NUM_B, NUM_C, NUM_CORRECT, NUM_D, NUM_E, " +
                "NUM_F, NUM_G, NUM_H, NUM_J, NUM_K, NUM_TOTAL, OBJECTIVE, PCT_CORRECT, PERIOD, TE" +
                "ACHER, TEKS, TEST_ID FROM ACI.TEMP_RESULTS_BENCHMARKSTATS ORDER BY TEACHER, PERI" +
                "OD, ITEM_NUM";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetBenchmarkStats.TEMP_RESULTS_BENCHMARKSTATSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetBenchmarkStats.TEMP_RESULTS_BENCHMARKSTATSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetBenchmarkStats.TEMP_RESULTS_BENCHMARKSTATSDataTable dataTable = new DataSetBenchmarkStats.TEMP_RESULTS_BENCHMARKSTATSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByUserFilter(DataSetBenchmarkStats.TEMP_RESULTS_BENCHMARKSTATSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetBenchmarkStats.TEMP_RESULTS_BENCHMARKSTATSDataTable GetDataByUseFilter() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            DataSetBenchmarkStats.TEMP_RESULTS_BENCHMARKSTATSDataTable dataTable = new DataSetBenchmarkStats.TEMP_RESULTS_BENCHMARKSTATSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetBenchmarkStats.TEMP_RESULTS_BENCHMARKSTATSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetBenchmarkStats dataSet) {
            return this.Adapter.Update(dataSet, "TEMP_RESULTS_BENCHMARKSTATS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_CAMPUS, string Original_TEST_ID, string Original_TEACHER, string Original_PERIOD, decimal Original_ITEM_NUM) {
            if ((Original_CAMPUS == null)) {
                throw new global::System.ArgumentNullException("Original_CAMPUS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CAMPUS));
            }
            if ((Original_TEST_ID == null)) {
                throw new global::System.ArgumentNullException("Original_TEST_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TEST_ID));
            }
            if ((Original_TEACHER == null)) {
                throw new global::System.ArgumentNullException("Original_TEACHER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TEACHER));
            }
            if ((Original_PERIOD == null)) {
                throw new global::System.ArgumentNullException("Original_PERIOD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_PERIOD));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_ITEM_NUM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CAMPUS, 
                    string TEST_ID, 
                    string TEACHER, 
                    string PERIOD, 
                    decimal ITEM_NUM, 
                    global::System.Nullable<decimal> PCT_CORRECT, 
                    global::System.Nullable<decimal> NUM_CORRECT, 
                    global::System.Nullable<decimal> NUM_TOTAL, 
                    global::System.Nullable<decimal> NUM_A, 
                    global::System.Nullable<decimal> NUM_B, 
                    global::System.Nullable<decimal> NUM_C, 
                    global::System.Nullable<decimal> NUM_D, 
                    global::System.Nullable<decimal> NUM_E, 
                    global::System.Nullable<decimal> NUM_F, 
                    global::System.Nullable<decimal> NUM_G, 
                    global::System.Nullable<decimal> NUM_H, 
                    global::System.Nullable<decimal> NUM_J, 
                    global::System.Nullable<decimal> NUM_K, 
                    string ANSWER, 
                    global::System.Nullable<decimal> OBJECTIVE, 
                    string TEKS) {
            if ((CAMPUS == null)) {
                throw new global::System.ArgumentNullException("CAMPUS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CAMPUS));
            }
            if ((TEST_ID == null)) {
                throw new global::System.ArgumentNullException("TEST_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TEST_ID));
            }
            if ((TEACHER == null)) {
                throw new global::System.ArgumentNullException("TEACHER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TEACHER));
            }
            if ((PERIOD == null)) {
                throw new global::System.ArgumentNullException("PERIOD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PERIOD));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(ITEM_NUM));
            if ((PCT_CORRECT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PCT_CORRECT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((NUM_CORRECT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(NUM_CORRECT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((NUM_TOTAL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(NUM_TOTAL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NUM_A.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(NUM_A.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((NUM_B.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(NUM_B.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NUM_C.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(NUM_C.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NUM_D.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(NUM_D.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((NUM_E.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(NUM_E.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((NUM_F.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(NUM_F.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((NUM_G.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(NUM_G.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((NUM_H.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(NUM_H.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NUM_J.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(NUM_J.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((NUM_K.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(NUM_K.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ANSWER == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(ANSWER));
            }
            if ((OBJECTIVE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(OBJECTIVE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((TEKS == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(TEKS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CAMPUS, 
                    string TEST_ID, 
                    string TEACHER, 
                    string PERIOD, 
                    decimal ITEM_NUM, 
                    global::System.Nullable<decimal> PCT_CORRECT, 
                    global::System.Nullable<decimal> NUM_CORRECT, 
                    global::System.Nullable<decimal> NUM_TOTAL, 
                    global::System.Nullable<decimal> NUM_A, 
                    global::System.Nullable<decimal> NUM_B, 
                    global::System.Nullable<decimal> NUM_C, 
                    global::System.Nullable<decimal> NUM_D, 
                    global::System.Nullable<decimal> NUM_E, 
                    global::System.Nullable<decimal> NUM_F, 
                    global::System.Nullable<decimal> NUM_G, 
                    global::System.Nullable<decimal> NUM_H, 
                    global::System.Nullable<decimal> NUM_J, 
                    global::System.Nullable<decimal> NUM_K, 
                    string ANSWER, 
                    global::System.Nullable<decimal> OBJECTIVE, 
                    string TEKS, 
                    string Original_CAMPUS, 
                    string Original_TEST_ID, 
                    string Original_TEACHER, 
                    string Original_PERIOD, 
                    decimal Original_ITEM_NUM) {
            if ((CAMPUS == null)) {
                throw new global::System.ArgumentNullException("CAMPUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CAMPUS));
            }
            if ((TEST_ID == null)) {
                throw new global::System.ArgumentNullException("TEST_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TEST_ID));
            }
            if ((TEACHER == null)) {
                throw new global::System.ArgumentNullException("TEACHER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TEACHER));
            }
            if ((PERIOD == null)) {
                throw new global::System.ArgumentNullException("PERIOD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PERIOD));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(ITEM_NUM));
            if ((PCT_CORRECT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PCT_CORRECT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((NUM_CORRECT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(NUM_CORRECT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((NUM_TOTAL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(NUM_TOTAL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NUM_A.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(NUM_A.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((NUM_B.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(NUM_B.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NUM_C.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(NUM_C.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NUM_D.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(NUM_D.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((NUM_E.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(NUM_E.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((NUM_F.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(NUM_F.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((NUM_G.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(NUM_G.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((NUM_H.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(NUM_H.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NUM_J.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(NUM_J.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((NUM_K.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(NUM_K.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ANSWER == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(ANSWER));
            }
            if ((OBJECTIVE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(OBJECTIVE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((TEKS == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(TEKS));
            }
            if ((Original_CAMPUS == null)) {
                throw new global::System.ArgumentNullException("Original_CAMPUS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_CAMPUS));
            }
            if ((Original_TEST_ID == null)) {
                throw new global::System.ArgumentNullException("Original_TEST_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_TEST_ID));
            }
            if ((Original_TEACHER == null)) {
                throw new global::System.ArgumentNullException("Original_TEACHER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_TEACHER));
            }
            if ((Original_PERIOD == null)) {
                throw new global::System.ArgumentNullException("Original_PERIOD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_PERIOD));
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_ITEM_NUM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> PCT_CORRECT, 
                    global::System.Nullable<decimal> NUM_CORRECT, 
                    global::System.Nullable<decimal> NUM_TOTAL, 
                    global::System.Nullable<decimal> NUM_A, 
                    global::System.Nullable<decimal> NUM_B, 
                    global::System.Nullable<decimal> NUM_C, 
                    global::System.Nullable<decimal> NUM_D, 
                    global::System.Nullable<decimal> NUM_E, 
                    global::System.Nullable<decimal> NUM_F, 
                    global::System.Nullable<decimal> NUM_G, 
                    global::System.Nullable<decimal> NUM_H, 
                    global::System.Nullable<decimal> NUM_J, 
                    global::System.Nullable<decimal> NUM_K, 
                    string ANSWER, 
                    global::System.Nullable<decimal> OBJECTIVE, 
                    string TEKS, 
                    string Original_CAMPUS, 
                    string Original_TEST_ID, 
                    string Original_TEACHER, 
                    string Original_PERIOD, 
                    decimal Original_ITEM_NUM) {
            return this.Update(Original_CAMPUS, Original_TEST_ID, Original_TEACHER, Original_PERIOD, Original_ITEM_NUM, PCT_CORRECT, NUM_CORRECT, NUM_TOTAL, NUM_A, NUM_B, NUM_C, NUM_D, NUM_E, NUM_F, NUM_G, NUM_H, NUM_J, NUM_K, ANSWER, OBJECTIVE, TEKS, Original_CAMPUS, Original_TEST_ID, Original_TEACHER, Original_PERIOD, Original_ITEM_NUM);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TEMP_RESULTS_BENCHMARKSTATSTableAdapter _tEMP_RESULTS_BENCHMARKSTATSTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TEMP_RESULTS_BENCHMARKSTATSTableAdapter TEMP_RESULTS_BENCHMARKSTATSTableAdapter {
            get {
                return this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter;
            }
            set {
                this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter != null) 
                            && (this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Connection != null))) {
                    return this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSetBenchmarkStats dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TEMP_RESULTS_BENCHMARKSTATS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSetBenchmarkStats dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TEMP_RESULTS_BENCHMARKSTATS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSetBenchmarkStats dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TEMP_RESULTS_BENCHMARKSTATS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSetBenchmarkStats dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter != null)) {
                    revertConnections.Add(this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter, this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Connection);
                    this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter != null)) {
                    this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter]));
                    this._tEMP_RESULTS_BENCHMARKSTATSTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591